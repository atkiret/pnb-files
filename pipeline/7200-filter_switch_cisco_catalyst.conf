# Cisco Catalyst Switch Logs
filter {    
    if "processed" not in [tags] and [syslog_device_mapping] == "cisco_catalyst" {
        mutate {
            remove_tag => ["_grokparsefailure"]
        }
        if ![event_raw] {
            mutate{
                add_field => {"event_raw" => "%{message}"}
            }
        }
        mutate {
            add_field => { "event_ts_rx" => "%{@timestamp}" }
            add_field => { "device_rx_from" => "%{host}" }
            add_field => { "forwarder" => "%{host}" }     
            add_field => { "device" => "%{host}" }     
            add_field => { "device_name" => "%{host}" }            
        }
        # Convert Received time to Timestamp format
        date {
            match => [ "event_ts_rx", "MMM dd yyyy HH:mm:ss", "MMM  d yyyy HH:mm:ss", "ISO8601" ]
            target => "event_ts_rx"
        }
        grok {
            match => { "message" => 
                [
                    "%{DATA}: %{SYSLOGTIMESTAMP:event_ts_tmp} %{DATA:tz_tmp}\: \%%{DATA:event_type}\: %{GREEDYDATA:message}",
                    "%{DATA}\: %{YEAR} %{SYSLOGTIMESTAMP:event_ts_tmp} %{DATA:tz_tmp}\: \%%{DATA:event_type}: %{GREEDYDATA:message}",
                    "%{DATA}\: (\.|\*)%{SYSLOGTIMESTAMP:event_ts_tmp} %{DATA:tz_tmp}\: \%%{DATA:event_type}: %{GREEDYDATA:message}",
                    "%{DATA}\: %{SYSLOGTIMESTAMP:event_ts_tmp}: \%%{DATA:event_type}: %{GREEDYDATA:message}"
                ]                
            }                        
            overwrite => [ "message" ] 
            add_field => { "device_vendor" => "Cisco" } # Set the Device Vendor                           
            add_field => { "device_info" => "Catalyst / Nexus"} # Set the Device Model 
        }
        if "_grokparsefailure" not in [tags] {

            if [event_type] == "AUTHPRIV-3-SYSTEM_MSG" {
                grok {
                    match => { "message" => "pam_aaa:%{DATA:action} for user %{DATA:user_src} from %{DATA:src_ip} - %{DATA:process_name}\[%{DATA:process_id}\]" }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version 
                    add_field => { "operation_type" => "Authorization"}                                  
                    add_tag => ["processed"]
                }

            } else if [event_type] == "LINK-3-UPDOWN" {
                grok {
                    match => { "message" => "Interface %{DATA:audit_object_name}, changed %{GREEDYDATA:status}" }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version
                    add_field => { "operation_type" => "Link"}                
                    add_tag => ["processed"]
                }
            } else if [event_type] == "LINEPROTO-5-UPDOWN" {
                grok {
                    match => { "message" => "Line protocol on Interface %{DATA:audit_object_name}, changed %{GREEDYDATA:status}" }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version                
                    add_field => { "operation_type" => "Link Protocol"}                
                    add_tag => ["processed"]
                }
            } else if [event_type] == "IP_SNMP-4-NOTRAPIP" {
                grok {
                    match => { "message" => "%{GREEDYDATA:audit_session_description}" }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version   
                    add_field => { "operation_type" => "SNMP Trap"}                             
                    add_tag => ["processed"]
                }
            } else if [event_type] in ["NTP-6-PEERREACH", "NTP-5-PEERSYNC", "NTP-4-UNSYNC"] {
                grok {
                    match => { "message" => [
                            "Peer %{DATA:dst_ip} is %{GREEDYDATA:status}",
                            "%{DATA:status} to peer %{GREEDYDATA:dst_ip}" ,
                            "%{GREEDYDATA:status}"
                        ]
                    }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version                
                    add_field => { "operation_type" => "NTP"}                
                    add_tag => ["processed"]
                }
            } else if [event_type] == "SYS-6-CLOCKUPDATE" {                
                grok {
                    match => { "message" => 
                            "%{DATA:status} from %{DATA:old_value} to %{DATA:new_value}, configured from NTP by %{IPORHOST:src_ip}\."
                    }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version    
                    add_field => { "operation_type" => "System Clock"}                            
                    add_tag => ["processed"]
                }
            } else if [event_type] == "SSH-5-SSH2_CLOSE" {            
                grok {
                    match => { "message" => 
                            "%{DATA:proto_app} Session from %{IPORHOST:src_ip} %{DATA} for user '%{DATA:user_src}' using crypto cipher '%{DATA:cipher}', hmac '%{DATA:hmac}' %{GREEDYDATA:action}"
                    }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version  
                    add_field => { "operation_type" => "SSH Session"}                              
                    add_tag => ["processed"]
                }
            } else if [event_type] == "SSH-5-SSH2_SESSION" {            
                grok {
                    match => { "message" => 
                            "%{DATA:proto_app} Session request from %{IPORHOST:src_ip} %{DATA} using crypto cipher '%{DATA:cipher}', hmac '%{DATA:hmac}' %{GREEDYDATA:action}"
                    }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version            
                    add_field => { "operation_type" => "SSH Session"}                                  
                    add_tag => ["processed"]
                }
            } else if [event_type] == "SSH-5-SSH2_USERAUTH" {
                grok {
                    match => { "message" => 
                            "User '%{DATA:user_src}' authentication for %{DATA:proto_app} Session from %{IPORHOST:src_ip} %{DATA} using crypto cipher '%{DATA:cipher}', hmac '%{DATA:hmac}' %{GREEDYDATA:action}"
                    }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version            
                    add_field => { "operation_type" => "SSH Session"}                                  
                    add_tag => ["processed"]
                }
            } else if [event_type] == "-SLOT1-5-BCM_L2_LEARN_DISABLE" {
                grok {
                    match => { "message" => 
                            "%{DATA:status} unit\=%{GREEDYDATA:audit_object_name}"
                    }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version            
                    add_field => { "operation_type" => "BCM MAC Learn Disabled"}                                  
                    add_tag => ["processed"]
                }                
            } else if [event_type] == "-SLOT1-5-BCM_L2_LEARN_ENABLE" {
                grok {
                    match => { "message" => 
                            "%{DATA:status} unit\=%{GREEDYDATA:audit_object_name}"
                    }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version            
                    add_field => { "operation_type" => "BCM MAC Learn Enabled"}                                  
                    add_tag => ["processed"]
                }                
            } else if [event_type] == "VSHD-5-VSHD_SYSLOG_CONFIG_I" {
                grok {
                    match => { "message" => 
                            "Configured from %{DATA:audit_object_name} by %{DATA:user_src} on %{IPORHOST:src_ip}@%{GREEDYDATA}"
                    }
                    add_field => { "model_name" => "audit" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version            
                    add_field => { "operation_type" => "Syslog Config"}                                  
                    add_tag => ["processed"]
                }                
            }             
            else if [event_type] in ["SEC-6-IPACCESSLOGP","SEC-6-IPACCESSLOGDP"] {
                grok {
                    match => { "message" => 
                        [
                            # Milliseconds removed as it's causing date parsing issues
                            "list %{DATA:rule_name} %{DATA:action} %{DATA:proto_l4} %{DATA:src_ip}\(%{INT:src_port}\) \-\> %{DATA:dst_ip}\(%{INT:dst_port}\), %{INT:packets_total} (packet|packets)",
                            "list %{DATA:rule_name} %{DATA:action} %{DATA:proto_l4} %{DATA:src_ip} \-\> %{DATA:dst_ip} \(%{INT:}\/%{INT:}\), %{INT:packets_total} (packet|packets)"
                        ]
                    }
                    add_field => { "model_name" => "firewall" } # Set the Model Name                       
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version                
                    add_tag => ["processed"]
                }
            }            
        }

        if "processed" in [tags] {
            # Convert Log time to Timestamp format       
            if [tz_tmp] == "UTC" {
                date {
                    locale => "en"
                    match => [ "event_ts_tmp", 
                                "MMM  d HH:mm:ss.SSS", 
                                "MMM dd HH:mm:ss.SSS",
                                "MMM  d HH:mm:ss",
                                "MMM dd HH:mm:ss",                                
                                "ISO8601"
                                ]
                    timezone => "Etc/UTC"
                    target => "event_ts"
                    tag_on_failure => ["cis_cat_date_parse_issue"]
                }                  
            } else {
                date {
                    locale => "en"
                    match => [ "event_ts_tmp", 
                                "MMM  d HH:mm:ss.SSS", 
                                "MMM dd HH:mm:ss.SSS",
                                "MMM  d HH:mm:ss",
                                "MMM dd HH:mm:ss",                                
                                "ISO8601"
                                ]
                    timezone => "Asia/Manila"
                    target => "event_ts"
                    tag_on_failure => ["cis_cat_date_parse_issue"]
                }    
            }
        }
        mutate {
            convert => { "packets_total" => "integer" }
            remove_field => [
                "tz_tmp", "event_ts_tmp", "message"
            ]
        }
    }
}

