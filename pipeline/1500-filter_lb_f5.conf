# This is the Parser for F5 Load Balancer
# <134>Sep 27 22:37:01 F5-PROD2 info tmm1[12370]: Rule /Common/iRule_E2E_AsccendProd <CLIENT_ACCEPTED>: Node IP address is: 172.25.18.201 and sent to Default Route
# <134>Sep 27 22:36:58 F5-PROD2 info tmm[12370]: Rule /Common/iRule_E2E_AsccendProd <CLIENT_ACCEPTED>: Node IP address is: 172.25.18.201 and sent to Default Route
# <134>Sep 27 22:29:56 F5-Link1 info tmm3[12568]: Rule /Common/iRule_172.22.101.0 <CLIENT_ACCEPTED>: Node IP address is: 172.22.101.28 and sent to Default Route
# <134>Sep 27 22:29:56 F5-Link1 info tmm3[12568]: Rule /Common/iRule_172.25.0.0 <CLIENT_ACCEPTED>: Node IP address is: 172.25.2.107 and sent to Default Route

filter {    
    mutate {
        remove_tag => ["_grokparsefailure"]
    }    
    if "processed" not in [tags] and [syslog_device_mapping] == "lb_f5" {
        #Extract Syslog Fields
        if ![event_raw] {
            mutate{
                add_field => {"event_raw" => "%{message}"}
            }
        }
        mutate {
            copy => { "@timestamp" => "event_ts_rx" }
            add_field => { "device_rx_from" => "%{host}" }
            add_field => { "forwarder" => "%{host}" }     
        }
        # Strip out the Syslog Headers
        grok {
            match => { "message" => "(<%{INT:}>)*%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:device} %{WORD:syslog_loglevel} %{PROG:sender_app}(?:\[%{POSINT:sender_pid}\])?: %{GREEDYDATA:message}" }
            overwrite => [ "message" ]                   
        }        
        # Just to ensure we have required fields
        if "_grokparsefailure" not in [tags] and [sender_app] in ["tmm", "tmm1", "tmm2", "tmm3"] {
            # Extract the Date from Syslog TimeStamp
            date {
                match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
                timezone => "Asia/Manila"
                target => "event_ts"     
            }
            # Convert Received time to Timestamp format
            date {
                match => [ "event_ts_rx", "MMM dd yyyy HH:mm:ss", "MMM  d yyyy HH:mm:ss", "ISO8601" ]
                timezone => "Etc/UTC"
                target => "event_ts_rx"
            }
            # Now parse the message
            grok {
                match => {"message" => "Rule %{URIPATH:rule} <%{WORD:action}>: Node IP address is: %{IPORHOST:dst_ip} and sent to %{GREEDYDATA:route}"}                
            }
            if "_grokparsefailure" not in [tags] {                    
                mutate {            
                    add_field => { "model_name" => "loadbalancer" } # Set the Model Name                
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version                 
                    
                    add_field => { "device_vendor" => "F5" } # Set the Device Vendor
                    add_field => { "device_info" => "Load Balancer"}
                    add_field => { "device_name" => "%{device}"}                    
                    add_field => { "event_type" => "%{model_name}" } # Set the Event Type
                     
                    add_field => {"traffic_dir" => "inbound"} #Inbound because it's a Application Load Balancer                    
                }                                                
                mutate {
                    remove_field => [
                        
                    ]
                }
                mutate { add_tag => ["processed"] }                
            }
        }
    }
}