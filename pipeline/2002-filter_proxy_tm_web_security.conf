# This is the Parser for Trend Micro URL Tracking Web
filter {
    mutate {
        remove_tag => ["_grokparsefailure"]
    }
    if "processed" not in [tags] and [syslog_device_mapping] == "tm_is_web_security" {
        #Extract Syslog Fields
        if ![event_raw] {
            mutate{
                add_field => {"event_raw" => "%{message}"}
            }
        }
        mutate {
            add_field => { "event_ts_rx" => "%{@timestamp}" }
            add_field => { "device_rx_from" => "%{host}" }
            add_field => { "forwarder" => "%{host}" }
        }
        # Convert Received time to Timestamp format
        date {
            match => [ "event_ts_rx", "MMM dd yyyy HH:mm:ss", "MMM  d yyyy HH:mm:ss", "ISO8601" ]
            target => "event_ts_rx"
        }
        # Strip out the Syslog (like) Headers
        # <134>pnbwpm45.pnbmdc.local: <Thu, 07 Mar 2019 17:03:10,PHT> [EVT_URL_ACCESS_TRACKING|LOG_INFO]
        grok {
            match => { "message" => "<%{INT:}>%{SYSLOGHOST:syslog_hostname}\: <%{DATA:}> \[%{DATA:event_type}\s*\|%{DATA:}\] %{DATA:event_subtype} (log|Log) %{GREEDYDATA:message}" }
            overwrite => [ "message" ]            
        }                    
        # By now we should've known if the event is Trend Micro InterScan Web Security
        if "_grokparsefailure" not in [tags] {
            if [event_type] in ["EVT_URL_ACCESS_TRACKING", "EVT_URL_BLOCKING", "EVT_FTP_GET"] {                                
                #Use Keyvalue Parser to play for Field Transforms.
                kv {
                    prefix => "tm_is_ws_"
                    transform_key => "lowercase"
                    field_split => ","
                    value_split => "="                
                }
                mutate {
                    add_field => { "model_name" => "proxy" } # Set the Model Name                
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version                                 
                    add_field => { "device_vendor" => "Trend Micro" } # Set the Device Vendor
                    add_field => { "device_info" => "Web Security"}                    
                        
                    rename => { "tm_is_ws_tk_username" => "user_src"} # Source User                                
                    rename => { "tm_is_ws_tk_url" => "http_url" } # HTTP URL                    
                    rename => { "tm_is_ws_tk_client_ip" => "src_ip"} # Source IP
                    rename => { "tm_is_ws_tk_server_ip" => "dst_ip"} # Destination IP
                    rename => { "tm_is_ws_tk_domain" => "http_request_domain" } # HTTP Request Domain
                    rename => { "tm_is_ws_tk_file_name" => "http_request_filename"} # HTTP Request Filename
                    rename => { "tm_is_ws_tk_operation" => "http_method"} # HTTP Methd (GET/POST/HEAD etc.)

                    # URL Blocking Specific Fields
                    rename => { "tm_is_ws_tk_rule_name" => "rule_name"}
                    rename => { "tm_is_ws_tk_group_name" => "user_group_src"} #User LDAP Group
                    rename => { "tm_is_ws_tk_scan_type" => "proxy_type"}
                    rename => {"tm_is_ws_tk_blocked_by" => "reason"}

                    #Assumptions
                    add_field => {"traffic_dir" => "outbound"} #Outbound because it's a Forward Comms           
                }
                if [tm_is_ws_tk_mime_content]
                {
                    mutate {
                        add_field => { "http_request_content_dev" => "%{tm_is_ws_tk_mime_content}"} # MIME Type
                        add_field => { "http_file_type" => "%{tm_is_ws_tk_mime_content}"} # File Type
                    }                        
                }
                if [tm_is_ws_tk_size] {
                    mutate {
                        add_field => { "http_file_size" => "%{tm_is_ws_tk_size}"}
                        add_field => { "http_response_bytes" => "%{tm_is_ws_tk_size}"}
                    }
                }
                #Calculate event_ts                                
                date {
                    match => [ "tm_is_ws_tk_date_field", "YYYY-MM-dd HH:mm:ssZ", "ISO8601" ]
                    target => "event_ts"     
                }
                #Strip down the HTTP URL
                grok {
                    match => {"http_url" => "%{URIPROTO:http_protocol}://(?:%{USER:user_dst}(?::[^@]*)?@)?(?:%{IPORHOST:http_host})(?::%{POSINT:dst_port})?(?:%{URIPATH:http_request_path})?(?:%{URIPARAM:http_request_params})?" }
                }
                #Set the HTTP Protocol
                if [tm_is_ws_tk_protocol]
                {
                    mutate {
                        rename => { "tm_is_ws_tk_protocol" => "http_protocol"}
                    }    
                }
                if ![http_protocol] {
                    mutate {
                        rename => { "tm_is_ws_tk_protocol" => "http_protocol"}
                    }
                }
                # Set the HTTP Request Path
                if [tm_is_ws_tk_path] {
                    mutate {
                        update => { "http_request_path" => "%{tm_is_ws_tk_path}"}
                    }
                }
                #Trend Micro Server
                if [tm_is_ws_tk_server] {
                    mutate {
                        add_field => { "device_name" => "%{tm_is_ws_tk_server}"}
                        add_field => { "device" => "%{tm_is_ws_tk_server}"}                    
                    }
                } else {
                    mutate {
                        add_field => { "device_name" => "%{syslog_hostname}"}
                        add_field => { "device" => "%{syslog_hostname}"}
                    }
                }
                #Destination Port
                if ![dst_port] or [dst_port] == "" {
                    if [http_protocol] == "http" {
                        mutate { add_field => { "dst_port" => "80"}}
                    } else if [http_protocol] == "https" {
                        mutate { add_field => { "dst_port" => "443"}}
                    }
                }
                # Translate Filter Action to Text
                translate {
                    field => "tm_is_ws_tk_filter_action"
                    destination => "status"
                    fallback => "unknown"
                    dictionary => {
                        "0" => "Block by URL filter without HTTP inspection"
                        "1" => "Block by URL filter with HTTP inspection"
                        "2" => "Monitor"
                        "3" => "Warn"
                        "4" => "Warn and Continue"
                    }                       
                }
                # Translate "tm_is_ws_tk_category" to Text
                if [tm_is_ws_tk_category] =~ "^[0-9]*$" {
                    translate {
                        field => "tm_is_ws_tk_category"
                        destination => "category_tmp"
                        fallback => "unknown"
                        dictionary => {
                            "23" => "Internet Radio and TV#Network Bandwidth"
                            "72" => "Pay to Surf#Network Bandwidth"
                            "57" => "Peer-to-Peer#Network Bandwidth"
                            "56" => "Personal Network Storage/File Download Server#Network Bandwidth"
                            "43" => "Photo Searches#NetworkBandwidth"
                            "70" => "Ringtones/Mobile Phone Downloads#Newtork Bandwidth"
                            "71" => "Software Downloads#Network Bandwidth"
                            "69" => "Streaming Media/MP3#Network Bandwidth"
                            "77" => "Adware#Internet Security"
                            "80" => "Cookies#Internet Security"
                            "81" => "Dialers#Internet Security"
                            "79" => "Disease Vector#Internet Security"
                            "82" => "Hacking#Internet Security"
                            "83" => "Joke Program#Internet Security"
                            "78" => "Malware Accomplice Formerly Virus Accomplice#Internet Security"
                            "84" => "Password Cracking#Internet Security"
                            "75" => "Phishing#Internet Security"
                            "73" => "Potentially Malicious Software#Internet Security"
                            "39" => "Proxy Avoidance#Internet Security"
                            "85" => "Remote Access Program#Internet Security"
                            "76" => "Spam#Internet Security"
                            "74" => "Spyware#Internet Security"
                            "88" => "Web Advertisement#Internet Security"
                            "42" => "Blogs/Web Communications#Communication and Searches"
                            "51" => "Chat/Instant Messaging#Communication and Searches"
                            "52" => "Email#Communication and Searches"
                            "41" => "Internet Infrastructure#Communication and Searches"
                            "24" => "Internet Telephony#Communication and Searches"
                            "53" => "Newsgroups#Communication and Searches"
                            "50" => "SocialNetworking#Communication and Searches"
                            "89" => "Web Hosting#Communication and Searches"
                            "16" => "Abortion#Adult"
                            "1" => "Adult/MatureContent#Adult"
                            "8" => "Alcohol/Tobacco#Adult"
                            "11" => "Gambling#Adult"
                            "25" => "Illegal Drugs#Adult"
                            "9" => "Illegal/Questionable#Adult"
                            "5" => "Intimate Apparel/Swimsuit#Adult"
                            "26" => "Marijuana#Adult"
                            "6" => "Nudity#Adult"
                            "3" => "Pornography#Adult"
                            "4" => "Sex Education#Adult"
                            "10" => "Tasteless#Adult"
                            "14" => "Violence/Hate/Racism#Adult"
                            "15" => "Weapons#Adult"
                            "40" => "Search Engines/Portals#Lifestyle"
                            "30" => "Activist Groups#Lifestyle"
                            "19" => "Arts#Lifestyle"
                            "22" => "Cult/Occult#Lifestyle"
                            "29" => "Cultural Institution#Lifestyle"
                            "20" => "Entertainment#Lifestyle"
                            "87" => "For Kids#Lifestyle"
                            "33" => "Games#Lifestyle"
                            "62" => "Gay/Lesbian#Lifestyle"
                            "68" => "Humor#Lifestyle"
                            "55" => "Personal Sites#Lifestyle"
                            "47" => "Personals/Dating#Lifestyle"
                            "18" => "Recreation/Hobbies#Lifestyle"
                            "54" => "Religion#Lifestyle"
                            "64" => "Restaurants/Food#Lifestyle"
                            "61" => "Society/Lifestyle#Lifestyle"
                            "65" => "Sports#Lifestyle"
                            "63" => "Sports Hunting and Gun Clubs#Lifestyle"
                            "66" => "Travel#Lifestyle"
                            "44" => "Alternate Journals#General"
                            "46" => "News/Media#General"
                            "27" => "Education#General"
                            "34" => "Government/Legal#General"
                            "37" => "Health#General"
                            "86" => "Made for AdSense Sites(MFA)#General"
                            "35" => "Military#General"
                            "36" => "Politics#General"
                            "49" => "Reference#General"
                            "48" => "Translators/Cached Pages#General"
                            "67" => "Vehicles#General"
                            "90" => "Untested#General"
                            "59" => "Auctions#Business"
                            "32" => "Brokerage/Trading#Business"
                            "21" => "Business/Economy#Business"
                            "31" => "Financial Services#Business"
                            "45" => "Job Search/Careers#Business"
                            "60" => "Real estate#Business"
                            "58" => "Shopping#Business"
                            "38" => "Computers/Internet#Business"            
                        }                    
                    } 
                    # Split the Category
                    if [category_tmp] =~ ".*#.*" {
                        grok {
                            match => {"category_tmp" => "%{DATA:category}\#%{GREEDYDATA:category_group}"}
                        }                        
                    } else {
                        mutate {
                            rename => { "category_tmp" => "category"}
                        }
                    }
                }
                else {
                    mutate { rename => { "tm_is_ws_tk_category" => "category" } }
                }        
                mutate {                
                    remove_field => [
                        "tm_is_ws_tk_server", "tm_is_ws_tk_path", "tm_is_ws_tk_uid", "tm_is_ws_tk_mime_content",
                        "tm_is_ws_tk_category", "tm_is_ws_tk_category_type", "tm_is_ws_tk_date_field",
                        "tm_is_ws_tk_size", "category_tmp",
                        "tm_is_ws_tk_opp_id" , "tm_is_ws_tk_filter_action"
                    ]
                }
                # Convert eligible fields to integer
                mutate {
                    convert => { "dst_port" => "integer" }                    
                    convert => { "src_port" => "integer" }
                    convert => { "http_request_bytes" => "integer" }
                    convert => { "http_response_bytes" => "integer" }
                    convert => { "http_response_time" => "integer" }
                    convert => { "http_response_code" => "integer" }   
                    
                }                
                mutate { add_tag => ["processed"] }                
            } 
            else if [event_type] == "EVT_VIRUS_FOUND" {
                #Use Keyvalue Parser to play for Field Transforms.
                kv {
                    prefix => "tm_is_ws_"
                    transform_key => "lowercase"
                    field_split => ","
                    value_split => "="                
                }
                mutate {
                    add_field => { "model_name" => "malware" } # Set the Model Name                                                        
                    add_field => { "model_version" => "0.1.0" } # Set the Model Version                                                
                    add_field => { "device_vendor" => "Trend Micro" } # Set the Device Vendor
                    add_field => { "device_info" => "Web Security"}               

                    rename => {"tm_is_ws_tk_username" => "user_src"}
                    rename => {"tm_is_ws_tk_protocol" => "protocol"}

                    rename => { "tm_is_ws_tk_category" => "[threat][name]"}
                    rename => {"tm_is_ws_tk_url" => "[threat][infected_file_path]"}
                    rename => {"tm_is_ws_tk_file_name" => "[threat][infected_file]"}
                    rename => {"tm_is_ws_tk_entity_name" => "status"}
                    rename => {"tm_is_ws_tk_action" => "reason"}
                    rename => {"tm_is_ws_tk_rule_name" => "rule_name"}
                    rename => {"tm_is_ws_tk_group_name" => "user_group_src"}
                    
                }
                if [tm_is_ws_tk_server] {
                    mutate {
                        add_field => { "device_name" => "%{tm_is_ws_tk_server}"}
                        add_field => { "device" => "%{tm_is_ws_tk_server}"}                    
                    }
                } else {
                    mutate {
                        add_field => { "device_name" => "%{syslog_hostname}"}
                        add_field => { "device" => "%{syslog_hostname}"}
                    }
                }
                #Calculate event_ts                                
                date {
                    match => [ "tm_is_ws_tk_date_field", "YYYY-MM-dd HH:mm:ssZ", "ISO8601" ]
                    target => "event_ts"     
                }
                mutate {
                    remove_field => [
                        "tm_is_ws_tk_scan_type", "tm_is_ws_tk_blocked_by", "tm_is_ws_tk_opp_id", "tm_is_ws_tk_uid",
                        "tm_is_ws_tk_date_field", "tm_is_ws_tk_malicious_entity"
                    ]
                }
                mutate { add_tag => ["processed"] } 
            }
        }
    }
}

