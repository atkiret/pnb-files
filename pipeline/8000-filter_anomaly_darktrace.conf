# Filter for Dark Trace Alerts
filter {
    if [syslog_device_mapping] == "anomaly_darktrace"  {     
        if ![event_raw] {
            mutate{
                add_field => {"event_raw" => "%{message}"}
            }
        }
        # May be its a Darktrace Event, Still needs to be verified.
        # Strip out the Syslog Headers
        grok {
            match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:message}" }
            overwrite => [ "message" ]
            add_field => { "event_ts_rx" => "%{@timestamp}" }
            add_field => { "device_rx_from" => "%{host}" }
        }

        date {
            match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
            timezone => "Etc/UTC"
            target => "event_ts"     
        }
        date {
            match => [ "event_ts_rx", "MMM dd yyyy HH:mm:ss", "MMM  d yyyy HH:mm:ss", "ISO8601" ]
            target => "event_ts_rx"
        }

        if "_grokparsefailure" not in [tags] and [message] =~ "CEF*." {
            
            grok {
		keep_empty_captures => true

                match => { "message" => "CEF:%{NUMBER:cef_version}\|%{WORD:cef_device_vendor}\|%{DATA:cef_device_product}\|%{DATA:cef_device_version}\|%{DATA:cef_sig_id}\|%{DATA:cef_sig_name}\|%{DATA:cef_sig_severity}\|%{GREEDYDATA:message}" }
                overwrite => [ "message" ]
            }
	    #  Attempt to preserve emtpy fields that have no data or quotes (added 2/14/2019, ajs)
	    mutate {
		gsub => [
		    "message", "= ", '="" '
		]
	    }
            # Parse the message with field=value formats
            kv {
                # Note: values with spaces are lost (still getting there)
                field_split => " "
                trim_key => "<>\[\], "
                trim_value => "<>\[\],"
                prefix => "anomaly_darktrace_"
            }        
            mutate {
                add_field => { "model_name" => "anomaly" } # Set the Model Name                
                add_field => { "model_version" => "0.1.0" } # Set the Model Version  

                rename => { "cef_device_product" => "device_info"}
                copy => {"syslog_hostname" => "device_name"}
                rename => { "cef_device_vendor" => "device_vendor"} 

                add_field => { "type" => "anomaly" } # Set the Event Type
                add_field => { "event_type" => "anomaly" } # Set the Event Type
                add_field => { "event_subtype" => "statistical"}

                rename => {"anomaly_darktrace_externalId" => "reference_id"}
                rename => {"anomaly_darktrace_darktraceUrl" => "reference"}

                rename => {"anomaly_darktrace_dvc" => "affected_host_ip"}
                rename => {"anomaly_darktrace_dvchost" => "affected_host"}

                rename => { "cef_sig_id" => "signature_id"}
                rename => { "cef_sig_name" => "signature"}
		rename => { "cef_sig_severity" => "severity"}

                rename => { "anomaly_darktrace_dst" => "dst_ip"}
                rename => { "anomaly_darktrace_dpt" => "dst_port"}
            }
            mutate {
                convert => { "dst_port" => "integer" }
            }
            mutate {
                remove_field => [
                    "syslog_device_mapping", 
                    "cef_device_version", "cef_sig_severity", "cef_version"
                ]
            }
            mutate { add_tag => ["processed"] }
        }        
    }
}
